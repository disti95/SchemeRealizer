###classgentest.php###

<?php

include_once '/path/to/Person.php';
include_once '/path/to/IPerson.php';
include_once '/path/to/IHuman.php';
abstract class Employee extends Person implements IPerson, IHuman {

	const empid;
	protected $firstname ;
	private $lastname ;

	public function getGetter() {
		return $this->getter; 
	}
	public abstract function getAbstractGetter();

	public function setSetter() {
		$this->setter = $setter;
	}
	public abstract function setAbstractSetter();

	protected final static function getCompany($name, array $employees = array('Michael', 'Watzer'), callable $func) {

	}
	public abstract function getPerson();

}

?>
-------------------------------
###Config_Schema_test.php###

	Schema-Validation of XML-File ../../config/config.xml OK!

-------------------------------
###defaultparamvalue_eval.php###

############################################################################
### UML
############################################################################
array(3) {
  ["$name"]=>
  NULL
  ["array $employees"]=>
  array(2) {
    [0]=>
    string(7) "Michael"
    [1]=>
    string(6) "Watzer"
  }
  ["callable $func"]=>
  NULL
}
############################################################################
### PHP - Token-based
############################################################################
array(7) {
  ["array $var1"]=>
  NULL
  ["callable $var2"]=>
  NULL
  ["ReflectionClass $rc"]=>
  NULL
  ["$person"]=>
  array(2) {
    [0]=>
    string(14) "Michael Watzer"
    [1]=>
    int(22)
  }
  ["$var1"]=>
  NULL
  ["$var2"]=>
  NULL
  ["callable $var3"]=>
  NULL
}
######################################################################
### PHP - Reflection-based
######################################################################
array(7) {
  ["array $var1"]=>
  NULL
  ["callable $var2"]=>
  NULL
  ["ReflectionClass $rc"]=>
  NULL
  ["$person"]=>
  array(2) {
    [0]=>
    string(14) "Michael Watzer"
    [1]=>
    int(22)
  }
  ["$var1"]=>
  NULL
  ["$var2"]=>
  NULL
  ["callable $var3"]=>
  NULL
}
######################################################################
### Compare PHP - Reflection-based and PHP - Token-based
######################################################################
OK!

-------------------------------
###Directory_test.php###

array(1) {
  [0]=>
  string(56) "/home/michael/workspace/SchemeRealizer/examples/MyLIB.db"
}
array(81) {
  [0]=>
  string(62) "/home/michael/workspace/SchemeRealizer/constants/constants.php"
  [1]=>
  string(66) "/home/michael/workspace/SchemeRealizer/controlling/execute_all.php"
  [2]=>
  string(59) "/home/michael/workspace/SchemeRealizer/devtools/prog2fs.php"
  [3]=>
  string(54) "/home/michael/workspace/SchemeRealizer/engines/sql.php"
  [4]=>
  string(54) "/home/michael/workspace/SchemeRealizer/error/error.php"
  [5]=>
  string(57) "/home/michael/workspace/SchemeRealizer/examples/Event.php"
  [6]=>
  string(61) "/home/michael/workspace/SchemeRealizer/examples/MySQLTest.php"
  [7]=>
  string(72) "/home/michael/workspace/SchemeRealizer/examples/PHP_Parser_TestClass.php"
  [8]=>
  string(62) "/home/michael/workspace/SchemeRealizer/examples/SQLiteTest.php"
  [9]=>
  string(69) "/home/michael/workspace/SchemeRealizer/examples/defaultparamvalue.php"
  [10]=>
  string(63) "/home/michael/workspace/SchemeRealizer/examples/userUMLTest.php"
  [11]=>
  string(55) "/home/michael/workspace/SchemeRealizer/gen/classgen.php"
  [12]=>
  string(53) "/home/michael/workspace/SchemeRealizer/gen/sqlgen.php"
  [13]=>
  string(60) "/home/michael/workspace/SchemeRealizer/gen/sqlvalidation.php"
  [14]=>
  string(53) "/home/michael/workspace/SchemeRealizer/gen/umlgen.php"
  [15]=>
  string(57) "/home/michael/workspace/SchemeRealizer/includes/about.php"
  [16]=>
  string(66) "/home/michael/workspace/SchemeRealizer/includes/class2database.php"
  [17]=>
  string(65) "/home/michael/workspace/SchemeRealizer/includes/class2diagram.php"
  [18]=>
  string(69) "/home/michael/workspace/SchemeRealizer/includes/class2mysqlExport.php"
  [19]=>
  string(70) "/home/michael/workspace/SchemeRealizer/includes/class2sqliteExport.php"
  [20]=>
  string(58) "/home/michael/workspace/SchemeRealizer/includes/config.php"
  [21]=>
  string(66) "/home/michael/workspace/SchemeRealizer/includes/database2class.php"
  [22]=>
  string(68) "/home/michael/workspace/SchemeRealizer/includes/database2diagram.php"
  [23]=>
  string(65) "/home/michael/workspace/SchemeRealizer/includes/diagram2class.php"
  [24]=>
  string(68) "/home/michael/workspace/SchemeRealizer/includes/diagram2database.php"
  [25]=>
  string(71) "/home/michael/workspace/SchemeRealizer/includes/diagram2mysqlExport.php"
  [26]=>
  string(72) "/home/michael/workspace/SchemeRealizer/includes/diagram2sqliteExport.php"
  [27]=>
  string(62) "/home/michael/workspace/SchemeRealizer/includes/getStarted.php"
  [28]=>
  string(69) "/home/michael/workspace/SchemeRealizer/includes/mysqlImport2class.php"
  [29]=>
  string(71) "/home/michael/workspace/SchemeRealizer/includes/mysqlImport2diagram.php"
  [30]=>
  string(70) "/home/michael/workspace/SchemeRealizer/includes/sqliteImport2class.php"
  [31]=>
  string(72) "/home/michael/workspace/SchemeRealizer/includes/sqliteImport2diagram.php"
  [32]=>
  string(62) "/home/michael/workspace/SchemeRealizer/includes/view/About.php"
  [33]=>
  string(63) "/home/michael/workspace/SchemeRealizer/includes/view/Config.php"
  [34]=>
  string(65) "/home/michael/workspace/SchemeRealizer/includes/view/Database.php"
  [35]=>
  string(68) "/home/michael/workspace/SchemeRealizer/includes/view/ProjectPath.php"
  [36]=>
  string(64) "/home/michael/workspace/SchemeRealizer/includes/view/toClass.php"
  [37]=>
  string(62) "/home/michael/workspace/SchemeRealizer/includes/view/toUML.php"
  [38]=>
  string(48) "/home/michael/workspace/SchemeRealizer/index.php"
  [39]=>
  string(58) "/home/michael/workspace/SchemeRealizer/native/Validate.php"
  [40]=>
  string(56) "/home/michael/workspace/SchemeRealizer/orm/mysql_orm.php"
  [41]=>
  string(57) "/home/michael/workspace/SchemeRealizer/orm/sqlite_orm.php"
  [42]=>
  string(56) "/home/michael/workspace/SchemeRealizer/php/php_parse.php"
  [43]=>
  string(53) "/home/michael/workspace/SchemeRealizer/req/config.php"
  [44]=>
  string(55) "/home/michael/workspace/SchemeRealizer/req/getClass.php"
  [45]=>
  string(53) "/home/michael/workspace/SchemeRealizer/req/getSQL.php"
  [46]=>
  string(53) "/home/michael/workspace/SchemeRealizer/req/getUML.php"
  [47]=>
  string(54) "/home/michael/workspace/SchemeRealizer/req/toClass.php"
  [48]=>
  string(57) "/home/michael/workspace/SchemeRealizer/req/toDatabase.php"
  [49]=>
  string(52) "/home/michael/workspace/SchemeRealizer/req/toUML.php"
  [50]=>
  string(56) "/home/michael/workspace/SchemeRealizer/schema/header.php"
  [51]=>
  string(65) "/home/michael/workspace/SchemeRealizer/schema/schemaexception.php"
  [52]=>
  string(61) "/home/michael/workspace/SchemeRealizer/schema/testing_cli.php"
  [53]=>
  string(73) "/home/michael/workspace/SchemeRealizer/testing/cli/Config_Schema_test.php"
  [54]=>
  string(69) "/home/michael/workspace/SchemeRealizer/testing/cli/Directory_test.php"
  [55]=>
  string(69) "/home/michael/workspace/SchemeRealizer/testing/cli/Including_test.php"
  [56]=>
  string(71) "/home/michael/workspace/SchemeRealizer/testing/cli/SQLiteDBGen_test.php"
  [57]=>
  string(67) "/home/michael/workspace/SchemeRealizer/testing/cli/classgentest.php"
  [58]=>
  string(77) "/home/michael/workspace/SchemeRealizer/testing/cli/defaultparamvalue_eval.php"
  [59]=>
  string(72) "/home/michael/workspace/SchemeRealizer/testing/cli/php_parse_compare.php"
  [60]=>
  string(69) "/home/michael/workspace/SchemeRealizer/testing/cli/php_parse_test.php"
  [61]=>
  string(65) "/home/michael/workspace/SchemeRealizer/testing/cli/sqlgentest.php"
  [62]=>
  string(70) "/home/michael/workspace/SchemeRealizer/testing/cli/sqlite_orm_test.php"
  [63]=>
  string(72) "/home/michael/workspace/SchemeRealizer/testing/cli/sqlvalidationtest.php"
  [64]=>
  string(60) "/home/michael/workspace/SchemeRealizer/testing/cli/tests.php"
  [65]=>
  string(69) "/home/michael/workspace/SchemeRealizer/testing/cli/uml_parse_test.php"
  [66]=>
  string(65) "/home/michael/workspace/SchemeRealizer/testing/cli/umlgentest.php"
  [67]=>
  string(66) "/home/michael/workspace/SchemeRealizer/testing/unit/ArraysCase.php"
  [68]=>
  string(67) "/home/michael/workspace/SchemeRealizer/testing/unit/ParsingCase.php"
  [69]=>
  string(66) "/home/michael/workspace/SchemeRealizer/testing/unit/SQLGenCase.php"
  [70]=>
  string(66) "/home/michael/workspace/SchemeRealizer/testing/unit/StringCase.php"
  [71]=>
  string(63) "/home/michael/workspace/SchemeRealizer/testing/unit/XMLCase.php"
  [72]=>
  string(67) "/home/michael/workspace/SchemeRealizer/testing/unit/prepArrCase.php"
  [73]=>
  string(56) "/home/michael/workspace/SchemeRealizer/uml/uml_parse.php"
  [74]=>
  string(55) "/home/michael/workspace/SchemeRealizer/utils/Arrays.php"
  [75]=>
  string(58) "/home/michael/workspace/SchemeRealizer/utils/Directory.php"
  [76]=>
  string(53) "/home/michael/workspace/SchemeRealizer/utils/File.php"
  [77]=>
  string(56) "/home/michael/workspace/SchemeRealizer/utils/Globals.php"
  [78]=>
  string(56) "/home/michael/workspace/SchemeRealizer/utils/Parsing.php"
  [79]=>
  string(55) "/home/michael/workspace/SchemeRealizer/utils/String.php"
  [80]=>
  string(52) "/home/michael/workspace/SchemeRealizer/utils/XML.php"
}
array(20) {
  [0]=>
  string(96) "/home/michael/workspace/SchemeRealizer/.metadata/.plugins/org.eclipse.jdt.core/javaLikeNames.txt"
  [1]=>
  string(98) "/home/michael/workspace/SchemeRealizer/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt"
  [2]=>
  string(50) "/home/michael/workspace/SchemeRealizer/CONTACT.txt"
  [3]=>
  string(50) "/home/michael/workspace/SchemeRealizer/LICENCE.txt"
  [4]=>
  string(47) "/home/michael/workspace/SchemeRealizer/NORM.txt"
  [5]=>
  string(64) "/home/michael/workspace/SchemeRealizer/examples/UMLDirectory.txt"
  [6]=>
  string(63) "/home/michael/workspace/SchemeRealizer/examples/UMLEmployee.txt"
  [7]=>
  string(62) "/home/michael/workspace/SchemeRealizer/examples/UMLExample.txt"
  [8]=>
  string(59) "/home/michael/workspace/SchemeRealizer/examples/servers.txt"
  [9]=>
  string(66) "/home/michael/workspace/SchemeRealizer/examples/userUMLGenTest.txt"
  [10]=>
  string(58) "/home/michael/workspace/SchemeRealizer/globals/logging.txt"
  [11]=>
  string(55) "/home/michael/workspace/SchemeRealizer/globals/main.txt"
  [12]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_0.txt"
  [13]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_1.txt"
  [14]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_2.txt"
  [15]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_3.txt"
  [16]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_4.txt"
  [17]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_5.txt"
  [18]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_6.txt"
  [19]=>
  string(64) "/home/michael/workspace/SchemeRealizer/logging/execute_all_7.txt"
}

-------------------------------
###Including_test.php###

getName
	empty, default value: ''
	firstname, default value: 'Michael'
	lastname, default value: array('Michael', 'Watzer')
getAge
	age, default value: '22'
utf-8
DBMS mysql OK!
File /clearly/forbidden doesn't exist!
Directory: Forbidden Method!
Directory: forbidden/dir isn't a directory!

-------------------------------
###php_parse_compare.php###

Test OK:

Token and Reflection-Parser are returning the same Array!

-------------------------------
###php_parse_test.php###

PHP_Parser_TestClass - PHP-Reflection-Parser: 

array(7) {
  [0]=>
  array(8) {
    [0]=>
    string(4) "var2"
    [1]=>
    int(1)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(4) "var3"
    [1]=>
    int(1)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(4) "var1"
    [1]=>
    int(1)
    [2]=>
    bool(false)
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(5) "const"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(14) "publicFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(4) {
      ["array $var1"]=>
      NULL
      ["callable $var2"]=>
      NULL
      ["ReflectionClass $rc"]=>
      NULL
      ["$person"]=>
      array(2) {
        [0]=>
        string(14) "Michael Watzer"
        [1]=>
        int(22)
      }
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(17) "protectedFunction"
    [1]=>
    int(2)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(15) "privateFunction"
    [1]=>
    int(2)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    array(2) {
      [0]=>
      string(6) "static"
      [1]=>
      string(5) "final"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(3) {
      ["$var1"]=>
      NULL
      ["$var2"]=>
      NULL
      ["callable $var3"]=>
      NULL
    }
  }
  [6]=>
  array(8) {
    [0]=>
    string(20) "PHP_Parser_TestClass"
    [1]=>
    int(3)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
}
PHP_Parser_TestClass - PHP-Token-Parser: 

array(7) {
  [0]=>
  array(8) {
    [0]=>
    string(4) "var1"
    [1]=>
    int(1)
    [2]=>
    bool(false)
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(5) "const"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(4) "var2"
    [1]=>
    int(1)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(4) "var3"
    [1]=>
    int(1)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(14) "publicFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(4) {
      ["array $var1"]=>
      NULL
      ["callable $var2"]=>
      NULL
      ["ReflectionClass $rc"]=>
      NULL
      ["$person"]=>
      array(2) {
        [0]=>
        string(14) "Michael Watzer"
        [1]=>
        int(22)
      }
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(17) "protectedFunction"
    [1]=>
    int(2)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(15) "privateFunction"
    [1]=>
    int(2)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    array(2) {
      [0]=>
      string(6) "static"
      [1]=>
      string(5) "final"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(3) {
      ["$var1"]=>
      NULL
      ["$var2"]=>
      NULL
      ["callable $var3"]=>
      NULL
    }
  }
  [6]=>
  array(8) {
    [0]=>
    string(20) "PHP_Parser_TestClass"
    [1]=>
    int(3)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
}
ExtendsClass - PHP-Reflection-Parser: 

array(8) {
  [0]=>
  array(8) {
    [0]=>
    string(4) "var2"
    [1]=>
    int(1)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(4) "var3"
    [1]=>
    int(1)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(4) "var1"
    [1]=>
    int(1)
    [2]=>
    bool(false)
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(5) "const"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(14) "publicFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(4) {
      ["array $var1"]=>
      NULL
      ["callable $var2"]=>
      NULL
      ["ReflectionClass $rc"]=>
      NULL
      ["$person"]=>
      array(2) {
        [0]=>
        string(14) "Michael Watzer"
        [1]=>
        int(22)
      }
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(17) "protectedFunction"
    [1]=>
    int(2)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(15) "privateFunction"
    [1]=>
    int(2)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    array(2) {
      [0]=>
      string(6) "static"
      [1]=>
      string(5) "final"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(3) {
      ["$var1"]=>
      NULL
      ["$var2"]=>
      NULL
      ["callable $var3"]=>
      NULL
    }
  }
  [6]=>
  array(8) {
    [0]=>
    string(16) "abstractFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [7]=>
  array(8) {
    [0]=>
    string(12) "ExtendsClass"
    [1]=>
    int(3)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    array(1) {
      [0]=>
      array(2) {
        [0]=>
        string(11) "ParentClass"
        [1]=>
        bool(true)
      }
    }
    [6]=>
    array(2) {
      [0]=>
      array(2) {
        [0]=>
        string(6) "iFace1"
        [1]=>
        bool(true)
      }
      [1]=>
      array(2) {
        [0]=>
        string(6) "iFace2"
        [1]=>
        bool(true)
      }
    }
    [7]=>
    bool(false)
  }
}
ExtendsClass - PHP-Token-Parser: 

array(8) {
  [0]=>
  array(8) {
    [0]=>
    string(4) "var1"
    [1]=>
    int(1)
    [2]=>
    bool(false)
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(5) "const"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(4) "var2"
    [1]=>
    int(1)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(4) "var3"
    [1]=>
    int(1)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(14) "publicFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(4) {
      ["array $var1"]=>
      NULL
      ["callable $var2"]=>
      NULL
      ["ReflectionClass $rc"]=>
      NULL
      ["$person"]=>
      array(2) {
        [0]=>
        string(14) "Michael Watzer"
        [1]=>
        int(22)
      }
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(17) "protectedFunction"
    [1]=>
    int(2)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(6) "static"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(15) "privateFunction"
    [1]=>
    int(2)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    array(2) {
      [0]=>
      string(6) "static"
      [1]=>
      string(5) "final"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(3) {
      ["$var1"]=>
      NULL
      ["$var2"]=>
      NULL
      ["callable $var3"]=>
      NULL
    }
  }
  [6]=>
  array(8) {
    [0]=>
    string(16) "abstractFunction"
    [1]=>
    int(2)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [7]=>
  array(8) {
    [0]=>
    string(12) "ExtendsClass"
    [1]=>
    int(3)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    array(1) {
      [0]=>
      array(2) {
        [0]=>
        string(11) "ParentClass"
        [1]=>
        bool(true)
      }
    }
    [6]=>
    array(2) {
      [0]=>
      array(2) {
        [0]=>
        string(6) "iFace1"
        [1]=>
        bool(true)
      }
      [1]=>
      array(2) {
        [0]=>
        string(6) "iFace2"
        [1]=>
        bool(true)
      }
    }
    [7]=>
    bool(false)
  }
}

-------------------------------
###sqlite_orm_test.php###

Comments: FhCId INode Comment Date 

-------------------------------
###sqlvalidationtest.php###

MySQL-Test:

sqlvalidation: Array has empty elements!
sqlvalidation: name: Overruns the max. size of 6!
sqlvalidation: name: Size is smaller than 1!
sqlvalidation: name: Invalid NULL value!
sqlvalidation: name: Invalid AUTO_INCREMENT value!
sqlvalidation: kunde: Invalid Index value!
sqlvalidation: Multiple AUTOINCREMENT-Tagged Columns!
sglvalidation: id: AUTO_INCREMENT tagged field isn't a number/float!
sqlvalidation: id: Element duplication!
sqlvalidation: plz: is tagged as a key, but has no key length!
sqlvalidation: plz: Overruns the max. size of 65 at m!
sqlvalidation: plz: Overruns the max. size of 30 at d!
sqlvalidation: Multiple AUTOINCREMENT-Tagged Columns!
SQLite-Test:

sqlvalidation: AUTOINCREMENT-Column id has to be an INTEGER!
sqlvalidation: time is a forbidden data type!
sqlvalidation: id: Invalid NULL value!
sqlvalidation: id: Invalid AUTO_INCREMENT value!
sqlvalidation: name: Invalid Index value!
sqlvalidation: Multiple AUTOINCREMENT-Tagged Columns!
sqlvalidation: AUTOINCREMENT-Column id has to be tagged as Primary-Key!
sqlvalidation: AUTOINCREMENT-Column id has to be an INTEGER!
sqlvalidation: AUTOINCREMENT: Primary-Key duplication!
sqlvalidation: name: Element duplication!

-------------------------------
###umlgentest.php###

<<class>>
ExtendsClass
{abstract}
extends => /path/to/parent:ParentClass
implements => /path/to/interface1:iFace1, /path/to/interface2:iFace2
----------------------------------------
var1 {const}
+ var2 {static}
# var3 {static}
----------------------------------------
+ publicFunction(array $var1, callable $var2, ReflectionClass $rc, $person = array('Michael Watzer', '22'))
# protectedFunction() {static}
- privateFunction($var1, $var2, callable $var3) {static,final}
+ abstractFunction() {abstract}

-------------------------------
###uml_parse_test.php###

../../examples/UMLEmployee.txt
array(6) {
  [0]=>
  array(8) {
    [0]=>
    string(5) "empid"
    [1]=>
    int(1)
    [2]=>
    bool(false)
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(5) "const"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(10) "firstname "
    [1]=>
    int(1)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(9) "lastname "
    [1]=>
    int(1)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(10) "getCompany"
    [1]=>
    int(4)
    [2]=>
    string(9) "protected"
    [3]=>
    bool(false)
    [4]=>
    array(2) {
      [0]=>
      string(6) "static"
      [1]=>
      string(5) "final"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(3) {
      ["$name"]=>
      NULL
      ["array $employees"]=>
      array(2) {
        [0]=>
        string(7) "Michael"
        [1]=>
        string(6) "Watzer"
      }
      ["callable $func"]=>
      NULL
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(9) "getPerson"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(8) "Employee"
    [1]=>
    int(5)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    array(1) {
      [0]=>
      string(8) "abstract"
    }
    [5]=>
    array(1) {
      ["/path/to/Person.php"]=>
      array(2) {
        [0]=>
        string(6) "Person"
        [1]=>
        bool(true)
      }
    }
    [6]=>
    array(2) {
      [0]=>
      array(1) {
        ["/path/to/IPerson.php"]=>
        array(2) {
          [0]=>
          string(7) "IPerson"
          [1]=>
          bool(true)
        }
      }
      [1]=>
      array(1) {
        ["/path/to/IHuman.php"]=>
        array(2) {
          [0]=>
          string(6) "IHuman"
          [1]=>
          bool(true)
        }
      }
    }
    [7]=>
    bool(false)
  }
}
../../examples/UMLDirectory.txt
array(11) {
  [0]=>
  array(8) {
    [0]=>
    string(6) "files "
    [1]=>
    int(1)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [1]=>
  array(8) {
    [0]=>
    string(5) "root "
    [1]=>
    int(1)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [2]=>
  array(8) {
    [0]=>
    string(10) "extension "
    [1]=>
    int(1)
    [2]=>
    string(7) "private"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [3]=>
  array(8) {
    [0]=>
    string(11) "__construct"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(2) {
      ["$root"]=>
      NULL
      ["$extension"]=>
      NULL
    }
  }
  [4]=>
  array(8) {
    [0]=>
    string(8) "getFiles"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [5]=>
  array(8) {
    [0]=>
    string(8) "setFiles"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [6]=>
  array(8) {
    [0]=>
    string(7) "getRoot"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [7]=>
  array(8) {
    [0]=>
    string(7) "setRoot"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(1) {
      ["$root"]=>
      NULL
    }
  }
  [8]=>
  array(8) {
    [0]=>
    string(12) "getExtension"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
  [9]=>
  array(8) {
    [0]=>
    string(12) "setExtension"
    [1]=>
    int(4)
    [2]=>
    string(6) "public"
    [3]=>
    bool(false)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    array(1) {
      ["$extension"]=>
      NULL
    }
  }
  [10]=>
  array(8) {
    [0]=>
    string(9) "Directory"
    [1]=>
    int(5)
    [2]=>
    bool(false)
    [3]=>
    bool(true)
    [4]=>
    bool(false)
    [5]=>
    bool(false)
    [6]=>
    bool(false)
    [7]=>
    bool(false)
  }
}
